//Copyright 2022 DiamondCoder1000. Permission granted
// for any use

 /**
 *	Type Float -- floating point arithmetic.
 *
 *	This class implements floating point arithmetic with 16 bit signed
 *	mantissa and 16 bit exponent.
 *
 *	Public interface:
 *	- void Float_init(): Inits the float
 *	- ptr NewFloat(): creates new float and returns ptr
 *	- void dispose(int index): disposes of float [index]
 *	- void set(int index, int index2): sets the float of index2 to 
 *	  index
 *
 **/
 
 
 /** Type Cordic -- CORDIC algorithm for computing circular functions.
 *
 *	This class implements the CORDIC algorithm.  
 *
 *	Public interface:
 *		function void init()
 *		function void cordic (Float x, Float y, Float z, bool mode)
 *		function void setN (int n)
 *	** W A R N I N G ***
 * 	This library assumes that Float.init() has already been called.
 **/
 
 
 /** Type Trig -- trigonometric functions using type Float.
 *
 *	This class implements floating point trigonometric functions.
 *
 *	All angles are in radians.
 *	All functions that return a Float return a static variable that
 *	must be copied.
 *
 *	Public interface:
 *
 *	Initialization
 *		function void init()
 *
 *	Constants and conversions
 *		function Float pi()
 *		function Float rad(Float d)
 *		function Float deg(Float r)
 *
 *	Basic functions
 *		function Float sin(Float a)
 *		function Float cos(Float a)
 *		function Float tan(Float a)
 *		function Float asin(Float x)
 *		function Float acos(Float x)
 *		function Float atan(Float x)
 *		function Float atan2(Float y, Float x)
 *
 *	Auxiliary functions
 *		function void toRect(Float r, Float a, Float ret_x, Float ret_y)
 *		function void toPolar(Float x, Float y, Float ret_r, Float ret_a)
 *		function Float lastSin()
 *		function Float lastCos()
 *	** W A R N I N G ***
 * 	This library assumes that Float.init() has already been called.
 **/
 
 