BITS == 32
@DEFINE a R1
@DEFINE index R2
@DEFINE temp R3
@DEFINE answerl R4
@DEFINE answeru R5

//16.16 fixed point a ^ b
//for any a make const = round(ln(a) / ln(2) * 65536)

@DEFINE const 65536

.start
IN a %fixed
UMLT answeru a const
MLT answerl a const
BSR answerl answerl 16
BSL answeru answeru 16
ADD a answeru answerl
IMM index 0
IMM answerl 65536
.loop
BSL temp 1 index
AND temp temp a
BRZ .next temp
  BGE .overflow index 20
  LLOD temp .pwr index
  UMLT answeru answerl temp
  MLT answerl answerl temp
  BSR answerl answerl 16
  BSL temp answeru 16
  ADD answerl answerl temp
  BGE .overflow answeru 65536
.next
INC index index
BRL .loop index @BITS
OUT %FIXED answerl
OUT %TEXT '\n'
JMP .start

.overflow
OUT %TEXT '-'
OUT %TEXT '\n'
JMP .start

.pwr
DW 65536
DW 65537
DW 65538
DW 65541
DW 65547
DW 65558
DW 65580
DW 65624
DW 65713
DW 65891
DW 66249
DW 66971
DW 68437
DW 71467
DW 77935
DW 92681
DW 131072
DW 262144
DW 1048576
DW 16777216